html,
body {
    margin: 0;
}

body,
dialog::backdrop,
*::before,
*::after {
    --primary-bg: #fdfeff;
    --primary-text: #111111;
    --secondary-bg: #eeeef3;
    --secondary-text: #9b9b9b;
    --hover-bg: #dde1e5;
    --active-bg: #cdcfd2;
    --shadow-soft: rgba(0, 0, 0, .15);
    --shadow-hard: rgba(0, 0, 0, .36);
    --red: #bc0c0c;

    --dark-primary-bg: #30373a;
    --dark-primary-text: #ebebeb;
    --dark-secondary-bg: #141516;
    --dark-secondary-text: #a4a7a9;
    --dark-hover-bg: #474c50;
    --dark-active-bg: #626569;
    --dark-shadow-soft: rgba(255, 255, 255, .15);
    --dark-shadow-hard: rgba(255, 255, 255, .36);
    --dark-red: #d46060;

    --accent: #bd4444;
    --hover-accent: #ac3232;
    --active-accent: #891111;
}

.dark,
.dark dialog::backdrop,
.dark *::before,
.dark *::after {
    --primary-bg: var(--dark-primary-bg);
    --primary-text: var(--dark-primary-text);
    --secondary-bg: var(--dark-secondary-bg);
    --secondary-text: var(--dark-secondary-text);
    --hover-bg: var(--dark-hover-bg);
    --active-bg: var(--dark-active-bg);
    --red: var(--dark-red);
}

body {
    font-family: system-ui, sans-serif;
    color: var(--primary-text);
    background: var(--secondary-bg);
}

input,
button,
select,
textarea {
    font-size: inherit;
    font-family: inherit;
    color: inherit;
    background: inherit;
    margin: 0;
}

input::placeholder,
textarea::placeholder {
    color: var(--secondary-text);
}

p,
li {
    line-height: 1.5em;
    max-width: 64ch;
}

dialog {
    color: var(--primary-text);
    background: var(--primary-bg);
    border: 0;
    border-radius: 6px;
    box-shadow: 0 2px 52px -6px var(--shadow-hard);
}

dialog::backdrop {
    background: var(--shadow-soft);
}

/* textarea trick */

.textarea-group {
    position: relative;
    tab-size: 4;
}

body.webkit .textarea-group,
body.webkit .textarea-itself {
    /* When path highlight <mark>s are placed into .text-annotations, they
     * disrupt kerning between letters and punctuation around words in a way
     * that can't be replicated in a <textarea>. To make text layout in both
     * environments identical, we turn off kerning. */
    font-kerning: none;
}

.textarea-shadow {
    visibility: hidden;
}

.textarea-shadow,
.textarea-itself {
    border: 0;
    padding: 0;
    outline: 0;
    box-sizing: border-box;
    line-height: 1.5em;
    min-height: 1.5em; /* line-height */
    color: inherit;
    text-decoration: inherit;
    width: 100%;
    margin: 0;
    background: transparent;
    word-wrap: break-word;
    white-space: pre-wrap;
    -webkit-text-size-adjust: none;
}

.textarea-itself {
    resize: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* Firefox doesn't extend this block to the bottom of .textarea-group
     * unless height is set to 100%. */
    height: 100%;
}

.textarea-shadow.extra-height {
    padding-bottom: 1.5em;
}

/* components */

input:not([type="checkbox"]),
button,
select {
    background: var(--primary-bg);
    line-height: 1.5em;
    border: 1px solid var(--hover-bg);
    box-sizing: border-box;
    margin: 0;
    padding: .3em .7em;
    border-radius: 4px;
    box-shadow: 0 1px 3px var(--shadow-soft);
}

button,
select,
input[type="date"],
input[type="color"] {
    cursor: pointer;
    transition: background .2s, box-shadow .3s;
}

button:hover,
select:hover,
input[type="date"]:active,
input[type="color"]:hover {
    box-shadow: 0 2px 6px var(--shadow-soft);
}

button:active,
select:active,
input[type="date"]:focus,
input[type="date"]:active,
input[type="color"]:focus,
input[type="color"]:active {
    background: var(--secondary-bg);
    box-shadow: 0 1px 4px var(--shadow-soft);
}

select {
    height: 2.25em;
}

input[type="checkbox"] {
    position: relative;
    cursor: pointer;
}

input[type="checkbox"]::before {
    content: '';
    visibility: visible;
    position: absolute;
    top: -1px;
    left: 0;
    height: 1em;
    width: 1em;
    border-radius: 4px;
    background: var(--primary-bg);
    border: 2px solid var(--accent);
    box-sizing: border-box;
}

input[type="checkbox"]:checked::before {
    background: var(--accent);
}

input[type="checkbox"]:checked::after {
    content: '';
    visibility: visible;
    position: absolute;
    top: 2px;
    left: 3px;
    height: 0.4em;
    width: 0.7em;
    transform: rotate(-45deg);
    background: transparent;
    box-sizing: border-box;
    border-left: 2px solid var(--primary-bg);
    border-bottom: 2px solid var(--primary-bg);
}

.flex-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;
}

.flex-col {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
}

.flex-spacer {
    width: 0;
    height: 0;
    flex-grow: 1;
}

/* layout */

.app {
    width: 100%;
    height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

header,
main,
footer {
    width: calc(100% - 36px);
    max-width: 1024px;
    margin: 16px auto;
}

header,
footer {
    flex-grow: 0;
    flex-shrink: 1;
}

header a.logo {
    color: var(--primary-text);
    font-weight: bold;
    text-decoration: none;
}

header a.logo:hover {
    text-decoration: underline;
}

main.flex-row {
    display: flex;
    flex-direction: row;
    gap: 24px;
    align-items: flex-start;
    height: 0;
    flex-grow: 1;
    margin-bottom: 0;
}

footer {
    line-height: 1.5em;
    font-size: calc(1em - 2px);
    color: var(--secondary-text);
}

footer a {
    color: inherit;
}

.task-list-list {
    height: 0;
    flex-grow: 1;
    overflow-y: auto;
}

.task-list {
    flex-grow: 1;
    flex-shrink: 0;
    width: 256px;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.task-list-list:empty {
    background: url(/img/egg.jpg);
    background-size: 200px;
    background-position: center 100px;
    background-repeat: no-repeat;
    mix-blend-mode: color-burn;
    animation: lift-up 1s forwards;
}

.task-list-search {
    margin-bottom: 8px;
    flex-grow: 0;
    flex-shrink: 1;
}

.task-list-search-row {
    width: 100%;
}

.task-list-search-input {
    width: 0;
    flex-grow: 1;
}

.task-list-new-task,
.category-editor-add {
    color: var(--primary-bg);
    background: var(--accent);
}

.dark .task-list-new-task,
.dark .category-editor-add {
    color: var(--primary-text);
}

.task-list-new-task:hover,
.category-editor-add:hover {
    background: var(--hover-accent);
}

.task-list-new-task:active,
.category-editor-add:active {
    background: var(--active-accent);
}

.task-list-range-select {
    width: 0;
    flex-grow: 1;
}

.task-list-list > li.task-li {
    margin-bottom: 8px;
}

.day {
    margin-bottom: 8px;
    gap: 4px;
}

.day-overdue .day-header,
.day-sat .day-header,
.day-sun .day-header {
    color: var(--red);
    border-bottom-color: var(--red);
}

.day-header {
    padding: 0.5em 0.8em;
    font-weight: bold;
    padding: 0.5em 0 0.3em 0;
    border-bottom: 2px solid var(--primary-text);
}

ul.tasks.flex-col {
    padding-left: 0;
    gap: 4px;
    margin: 4px 0;
}

li.task-li {
    list-style: none;
    width: 100%;
}

.task {
    cursor: pointer;
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: 16px;
    align-items: flex-start;
    padding: 8px;
    box-sizing: border-box;
    border-radius: 4px;
    transition: background .2s;
}

.task.task-done .task-text,
.task.task-done .task-category {
    opacity: .5;
}

.task.task-done .task-text {
    text-decoration: line-through;
}

.task:hover,
.task.active {
    background: var(--primary-bg);
}

.task-status {
    padding-left: 4px;
}

.task-content {
    flex-grow: 1;
    width: 0;
}

.task-text {
    line-height: 1.5em;
    word-wrap: break-word;
}

.task-body-preview {
    color: var(--secondary-text);
    font-size: calc(1em - 4px);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.task-due {
    color: var(--accent);
}

.task-category {
    margin-top: 4px;
}

.category {
    display: inline-block;
    color: var(--primary-bg);
    font-size: calc(1em - 4px);
    background: var(--secondary-text); /* base color */
    padding: 0 0.5em;
    border-radius: 4px;
    box-shadow: 0 1px 3px var(--shadow-soft);
}

.dark .category {
    color: var(--primary-bg); /* override dark mode */
}

.task-page {
    flex-grow: 8;
    width: 256px;
    height: 100%;
    display: flex;
    flex-direction: column;
}

@keyframes lift-up {
    from {
        opacity: 0;
        transform: translate(0, 12px);
    }
    to {
        opacity: 1;
        transform: translate(0, 0);
    }
}

.task-page-empty {
    background: url(/img/empty-page.jpg);
    background-size: 300px;
    background-position: center center;
    height: 100%;
    background-repeat: no-repeat;
    mix-blend-mode: color-burn;
    animation: lift-up 2s forwards;
}

.task-page-header {
    flex-grow: 0;
    flex-shrink: 0;
    overflow-y: auto;
    margin-bottom: 8px;
}

.task-editor {
    height: 0;
    flex-grow: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

.task-editor.flex-col {
    align-items: flex-start;
}

.task-editor-text,
.task-editor-body {
    width: 100%;
}

.task-editor-body {
    height: 0;
    flex-grow: 1;
}

.task-editor-body .textarea-group {
    min-height: 100%;
}

.task-editor-text {
    font-size: 2em;
    margin-top: 16px;
    margin-bottom: 0;
}

.task-editor-option-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 8px;
    width: 100%;
    margin: 16px 0;
}

.task-editor-option-subrow {
    width: auto;
    flex-grow: 0;
    flex-shrink: 1;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;
    min-width: 0;
}

.task-editor-option-subrow input,
.task-editor-option-subrow select {
    flex-grow: 0;
    flex-shrink: 1;
    min-width: 0;
}

dialog.category-editor {
    padding: 1em;
    width: calc(100% - 36px);
    max-width: 360px;
}

.category-editor-header {
    margin-bottom: 24px;
    width: 100%;
}

dialog h2 {
    margin: 0;
}

ul.category-editor-list {
    padding-left: 0;
    margin: 0;
    width: 100%;
}

li.category-editor-item {
    list-style: none;
    width: 100%;
}

.category-editor-name-input {
    flex-grow: 1;
}

.category-editor-color-input {
    height: 2.25em;
}

.category-editor-add {
    width: 100%;
}

@media only screen and (max-width: 780px) {
    .task-list {
        max-width: unset;
        width: 0;
        flex-grow: 1;
    }
    .app.no-active-task .task-page {
        display: none;
    }
    .app.active-task .task-list {
        display: none;
    }
    .task-editor-option-row {
        flex-direction: column;
    }
    .task-editor-option-subrow {
        width: 100%;
    }
}

